# GitHub solo {#sec-github-solo}

Thus far your repositories have all been in your local filespace. This is often on a laptop, although for consistency this semester as we learn, we have been creating and using repos on [Edupod Rstudio](https://edupod.cns.utexas.edu/).

Even when working on one's own (solo), it can be convenient to have a backup in the cloud. Git hosting services provide this. Examples include Github, GitLab, and BitBucket. As we will see later, these services also provide a platform for collaborating with others, but they work just as well as a backup for solo work.

## Create a GitHub account

You will need to have a working [GitHub](https://github.com) account. You are welcome to use an existing Github account (if you happen to have one), or you can create one just for this course (a "throwaway") or you can use your real name and plan to retain this account for your professional life. Whichever you choose you will need a working email address associated with the account (to confirm and see the notifications).

## Create a repository on GitHub

Once you are logged into GitHub you can create a repository using the "New Repository" button (which is usually green colored).

You will need to give two things:

1.  A repository name. I suggest that you use a prefix of `i320d-` for all the repos used in this class. That will ensure you can easily clean them up later.

2.  Be sure to select "Add a README file" under the *Initialize this repository with ...* section.

Once you've created the repository you will see a "Quick Setup" page. This shows you the URL of the repository that you've created. This is how mine looks:

![](images/new_repo_url.png)

You should copy the URL using the little grey box-on-box that looks something like: {{< fa light copy title="A box-on-box copy icon">}}

## Clone the repo to your local space

Now that we have an empty repo on Github, we can bring it down to our local space.  This uses a git command called `git clone`. 

Go to the [Edupod Rstudio](https://edupod.cns.utexas.edu/) and to the Terminal tab.

Before running git clone, everyone needs to ensure they are in a folder that is not inside another repo. You can place repos anywhere you want. I suggest placing them all into your home folder on edupod. You can be sure you are there by running this command (read as "cd tilde" because tilde is a shortcut for your home directory).

```sh
cd ~
```

To be sure that you aren't inside another repo you can run `git status` and you *want* to see a fatal error.

``` sh
git status
fatal: not a git repository (or any parent up to mount point /stor/home)
Stopping at filesystem boundary (GIT_DISCOVERY_ACROSS_FILESYSTEM not set).
```

If you do not see the fatal error, then you need to move up in your folder hierarchy until you are not in a repo. Use `cd ..` or `cd ~`. If you still get that error and you are in your home folder, see FAQ for "I accidentally made my home folder a git repo" at @sec-faq-home-git-folder 

Then clone your repository and change directory into it.

For my example repo in the image above this would be:

```sh
git clone https://github.com/jameshowison/i320d-test1.git
cd i320d-test1
```

You will need to replace the repo URL and the repository name to match yours like:

``` sh
git clone <repo_url>
cd <repository_name>
```

## Edit/Save/Add/Commit as usual

Now we can do our usual git stuff: We can edit a file, save it, then use `git add` and `git commit -m "Some message"` to store our new version in git.

As usual, here is a command that simulates editing and saving a file (which you can also do through the RStudio interface):

```sh
echo -e "\n\nA new line in README" >> README.md
git add README.md
git commit -m "Added line to README"
```

## Obtain special password for commandline git (PAT)

Your password for GitHub will give you access to the GitHub web interface, but to connect `git` on the commandline to GitHub we need a *Personal Access Token* (PAT).  You can think of this as a special use password. Go to https://github.com/settings/tokens

1. Click "Generate token".  
2. Chose "Generate New Token (classic)" from the drop down
3. Select "repo" "workflow" and "user" permissions
and then hit "Generate Token"

You will then be able to copy the PAT.  You need to keep this somewhere you can copy from in class.  I put it into my password manager (I use 1password).  Note that this gives full access to your GitHub account, so if you have work stuff or other things in there, come talk to me or use a "fine-grained access token" scoped only to the repos for this class.

{{< video images/generate_pat_token.mp4 >}}

## Send your changes up to GitHub 

The `git push` command will move any new work from your local repo, up to GitHub. 

```sh
git push
```

Rstudio on EduPod will pop up a window for your username/password.  You must use the email address associated with your GitHub account, together with your PAT.  Your regular GitHub password will not work. You have to use the PAT you created in the previous step.  If you didn't copy it down, you can create a new one, don't forget to store it somewhere so that you can copy it for use in class.
